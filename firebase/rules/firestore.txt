rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /{document=**} {
      allow read;
      match /emailtouid/{_} {
        allow write: 
          if request.auth != null 
          && request.auth.uid == request.resource.data.userId;
      }
      match /followingtimelines/{id} {
        allow delete, update:
          if request.auth != null
          && get(/databases/$(database)/documents/followingtimelines/$(id)).data.userId == request.auth.uid;
        allow write: 
          if request.auth != null 
          && request.auth.uid == request.resource.data.userId;
      }
      match /timelines/{id} {
        allow delete, update:
          if request.auth != null
          && get(/databases/$(database)/documents/timelines/$(id)).data.userId == request.auth.uid;
        allow write: 
          if request.auth != null 
          && request.auth.uid == request.resource.data.userId;
      }
      match /videos/{id} {
        allow write: 
          if request.auth != null 
          && request.auth.uid == request.resource.data.userId;
      }
      match /users/{userId} {
        allow read, update, delete: if request.auth != null && request.auth.uid == userId;
        allow create: if request.auth != null;
      }
      match /videocomments/{id} {
        allow create: 
          if request.auth != null 
          && request.auth.uid == request.resource.data.userId
          && request.resource.data.approved == 0;
      }
    }
  }
}